#+TITLE: dialect editor
* DONE Make menu item
** DONE create idiom
*** be rspec ./spec/features/dialect/index_spec.rb:32
*** DONE assumes moves, which is wrong - it needs to react on moves or dancers
** DONE delete-all idioms
*** stuck on ujs ajax:success event not firing
** DONE edit idiom
** DONE delete idiom
** DONE grid
** DONE unselect role buttons when an individual idiom changes from the norm
** TODO make it for dancers too
* TODO in idioms_controller#create, figure out what to do about all them funky formats like html and json
* DONE fix margins on dialect page
* DONE have two views folders, idiom/ and idioms/
* TODO idiom_type_from_term needs tidying up - see comment in its source code
* DONE blinkenlights
** DONE light on create
* TODO custom matcher
** TODO move to a real home file
** TODO fix js wait bug in custom matcher
** TODO unify slugifyTerm and slugify_move, and add tests
* TODO worry about all those ajax calls that have 'done' but no matching error handler
* DONE put idiom editors in a table so they don't look like Austin Powers' teeth
* TODO disregard whitespace in substitutions
* TODO IdiomsController#create code is awkward, can't we create the right type from the get-go?
    @idiom = Idiom::Move.new(idiom_params)
    @idiom.user = current_user
    @idiom.type = idiom_type_from_term(@idiom.term)
* TODO spec: deleting user also deletes idioms
* TODO write test for escape-to-undo
* TODO sort list by term type then term alphabetic
* TODO reindent index.html.erb top div
* TODO refactor that enormous js function
