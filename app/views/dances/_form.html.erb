<%= form_for(@dance) do |f| %>
  <% if @dance.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@dance.errors.count, "error") %> prohibited this dance from being saved:</h2>

      <ul>
      <% @dance.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<% if params[:copy_dance_id] then
     copy_dance = Dance.find(params[:copy_dance_id])
   else
     copy_dance = nil
   end 


%>

<% if copy_dance then %>
<p>Composing a variation of <strong><%= copy_dance.title %></strong><p>
<% end %>

  <div class="field">
    <%= f.label :title %>
    <h1><%= if copy_dance 
            then f.text_field :title, {value: copy_dance.title + ' variation'} 
            else f.text_field :title 
            end %></h1>
  </div>
  <div class="field">
    <%= f.label "by" %><br>
    <%= begin
          options_sans_params = Choreographer.all.map {|c| [c.name,c.id]}
          param_default       = params[:choreographer_id] || (copy_dance && copy_dance.choreographer_id)
          options_with_params = options_for_select(options_sans_params, param_default)
          options = param_default ? options_with_params : options_sans_params
          f.select :choreographer_id, options
        end %>
  </div>
  <div class="field">
    <%= f.label :start_type %><br>
    <%= f.text_field :start_type, copy_dance ? {value: copy_dance.start_type} : {} %>
  </div>


  <table class="figure_edits">
    <thead>
      <tr>
        <th></th>
        <th>beats</th>
        <th>who</th>
        <th>B+</th>
        <th>move</th>
        <th>turn</th>
        <th>notes</th>
      </tr>
    </thead>

    <tbody>



        <% for figure_idx in (1..8) do %>
           <tr class="figure_edit" id=figure_edit_<%= figure_idx %> >
             <td><%= figure_idx %></td>
             <td><%= tag( :input, {value: 8, min: 0, max: 16, class: "beat_edit", type: "number"} ) %></td>
             <td><%= selects = []
                 for who in DancesHelper::WHO
                   selects.push content_tag( :option, who, 
                                             who===DancesHelper::WHO[0] ? {value: who, selected: "selected"} : {value: who})
                 end
                 content_tag( :select, selects.join( " " ).html_safe, {class: "who_edit"} ) 
              %></td>
             <td><%= tag( :input, {type: "checkbox", class: "balance_edit"}) %></td>
             <td><%= content_tag( :select, "", {class: "move_edit"} ) %></td>
             <td><%= content_tag( :select, 
                              options_html(DancesHelper::RotationMenuLabels.map {|x| 
                                [x,rotation_to_degrees(x)]}
                            ).html_safe, class: "rotations_edit") %>
             <%= content_tag( :select, options_html((1..8).to_a.map{|x|["#{pluralize(x,'place')}",x*90]}).html_safe, class: "places_edit") %></td>
             <td><%= tag( :input, {value: "", class: "notes_edit", type: "text", maxlength: 100} ) %></td>
           </tr>



        <% end %> 
    </tbody>
  </table>


  <% for i in (1..8) do %>
    <div class="field" hidden="hidden">
      <%= begin
            figureN = ("figure"+i.to_s).intern()
            h = {class: "figure_hidden_#{i}"}.merge(copy_dance ? {value: copy_dance[figureN]} : {})
            f.text_field figureN, h
          end %>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :notes %><br>
    <%= begin
          h = {value: copy_dance ? copy_dance.notes : ''}.merge(copy_dance ? {class: "per_dance_notes_edit"} : {})
          f.text_area :notes, h
        end  %>
  </div>

  <div class="actions">
    <%= f.submit class: "update_dance" %>
  </div>
<% end %>
