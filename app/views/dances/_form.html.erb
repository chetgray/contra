
  <%# Layout the editor in a twelve-column grid. If we've got plenty
  of space, then labels take the left column. If space is tight, they
  take the two leftmost columns.  %>

  <% debug_figure_json = true %>


<div class="container contra-dance-edit">
<%= form_for(@dance) do |f| %>
  <% if @dance.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@dance.errors.count, "error") %> prohibited this dance from being saved:</h2>

      <ul>
      <% @dance.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<% if params[:copy_dance_id] then
     copy_dance = Dance.find(params[:copy_dance_id])
   else
     copy_dance = nil
   end 


%>

  <% if copy_dance then %>
  <div class="row">
    <div class="col-md-1 col-xs-2"></div>
    <div class="col-md-11 col-xs-10">Composing a variation of <strong><%= copy_dance.title %></strong></div>
  </div>
  <% end %>


  <div class="row field">
    <div class="contra-label col-md-1 col-xs-2">Title</div>
    <%= if copy_dance 
        then f.text_field :title, {class: "dance-title-edit col-md-11 col-xs-10", value: copy_dance.title + ' variation'}
        else f.text_field :title, {class: "dance-title-edit col-md-11 col-xs-10"}
        end %>
  </div>
  <div class="row field">
    <%= f.label "by", class: "col-md-1 col-xs-2" %>
    <%= begin
          options_sans_params = Choreographer.all.map {|c| [c.name,c.id]}
          param_default       = params[:choreographer_id] || (copy_dance && copy_dance.choreographer_id)
          options_with_params = options_for_select(options_sans_params, param_default)
          options = param_default ? options_with_params : options_sans_params
          f.select :choreographer_id, options,  {}, {class: "col-md-11 col-xs-10"}
        end %>
  </div>
  <div class="row field">
    <%= f.label :formation, class: "col-md-1 col-xs-2" %>
    <%= f.text_field :start_type, {class: "col-md-11 col-xs-10"}.merge(copy_dance ? {value: copy_dance.start_type} : {}) %>
  </div>


  <%# Here we got "off grid" and switch to a table of the same total width. The grid was just
      being too damn wonky.  %>

  <div class="row">
  <table class="figure_edits col-md-12 col-xs-12">
    <thead>
      <tr>                                       <!-- 12 twelfths -->
        <th style="width:  8.33333%">#</th>       <!-- 1 -->
        <th style="width:  8.33333%">beats</th>   <!-- 1 -->
        <th style="width: 16.66667%">formation</th><!-- 2 -->
        <th style="width: 16.66667%">who</th>     <!-- 2. -->
        <th style="width:  2.77778%">B+</th>      <!-- 0.333 -->
        <th style="width: 13.33333%">move</th>    <!-- 1.667 -->
        <th style="width: 16.66667%">turn</th>    <!-- 2 -->
        <th style="width: 16.66667%">notes</th>    <!-- 2 -->
      </tr>
    </thead>

    <tbody>



        <% for figure_idx in (1..8) do %>
           <tr class="figure_edit" id=figure_edit_<%= figure_idx %> >
             <td style="text-align: center"><%= figure_idx %> </td>
             <td><%= tag( :input, {value: 8, min: 0, max: 16, class: "beat_edit", type: "number"} ) %></td>
             <td><select class="formation_edit">
                 <option value="unspecified" selected="selected"></option>
                 <option value="square">square</option>
                 <option value="short_lines">short lines</option>
                 <option value="short_wavy_lines">short wavy lines</option>
                 <option value="long_wavy_lines">long wavy lines</option>
                 <option value="long_wavy_line">long wavy line</option>
                 <option value="custom">custom</option>
                 </select></td>
             <td><%= selects = []
                 for who in DancesHelper::WHO
                   selects.push content_tag( :option, who, 
                                             who===DancesHelper::WHO[0] ? {value: who, selected: "selected"} : {value: who})
                 end
                 content_tag( :select, selects.join( " " ).html_safe, {class: "who_edit"} ) 
              %></td>
             <td><%= tag( :input, {type: "checkbox", class: "balance_edit"}) %></td>
             <td><%= content_tag( :select, "", {class: "move_edit"} ) %></td>
             <td><%= content_tag( :select, 
                              options_html(DancesHelper::RotationMenuLabels.map {|x| 
                                [x,rotation_to_degrees(x)]}
                            ).html_safe, class: "rotations_edit") %>
             <%= content_tag( :select, options_html((1..8).to_a.map{|x|["#{pluralize(x,'place')}",x*90]}).html_safe, class: "places_edit") %></td>

             <td><%= tag( :input, {value: "", class: "notes_edit", type: "text", maxlength: 100} ) %></td>
           </tr>



        <% end %> 
    </tbody>
  </table>
  </div>

  <% if debug_figure_json then  %>
  <div class="row">
    <div class="col-md-1 col-xs-2" style="text-align: center">#</div>
    <div class="col-md-11 col-xs-10"><strong style="color: red">debug_figure_json = true </strong></div>
  </div>
  <% end %> 

  <div class="row">
  <% for i in (1..8) do %>
    <% if debug_figure_json then  %>
      <div class="col-md-1 col-xs-2" style="text-align: center"><%= i %></div>
    <% end %> 
    <div class="field" 
         <%= debug_figure_json ?  '' : 'hidden="hidden"' %> >
      <%= begin
            figureN = ("figure"+i.to_s).intern()
            h = {class: "figure_hidden_#{i} col-md-11 col-xs-10"}.merge(copy_dance ? {value: copy_dance[figureN]} : {})
            f.text_field figureN, h
          end %>
    </div>
  <% end %>
  </div>

  <div class="row field">
    <%= f.label :notes, class: "col-md-1 col-xs-2"%>

    <%= begin
          h = {class: 'per_dance_notes_edit col-md-11 col-xs-10'};
          if copy_dance then
            h[:value] = copy_dance.notes
          end
          f.text_area :notes, h
        end  %>
  </div>
  <br>

  <div class="row actions">
    <div class="col-md-1 col-xs-2"></div>
    <%= f.submit class: "update_dance", class: "col-md-3 col-xs-10 btn btn-md btn-success" %>
  </div>
<% end %>
</div>
